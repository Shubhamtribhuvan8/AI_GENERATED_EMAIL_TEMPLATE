{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/dharmil/Documents/AI_EMAIL_Template/FE/src/component/pages/generate-email-content.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport InputForm from \"../ui/InputForm\";\nimport EmailTemplate from \"../ui/EmailTemplate\";\nimport { generateEmail } from \"../../apis/generateEmail\";\nimport Spinner from \"../ui/spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenerateEmailContent() {\n  _s();\n  const [emailData, setEmailData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFormSubmit = data => {\n    setEmailData(data);\n    handleGenerateEmail(data); // Pass data directly to generate email\n  };\n  const handleGenerateEmail = async data => {\n    setIsLoading(true);\n    try {\n      const emailContent = await generateEmail(data); // Use the passed data\n      setEmailData(emailContent);\n    } catch (error) {\n      console.error(\"Error generating email:\", error);\n      // Optionally, you can set an error state here to display a message to the user\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"min-h-screen bg-gray-100 py-8 mt-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center mb-8\",\n        children: \"Deep Blue Health Email Template Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(InputForm, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 38\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(EmailTemplate, {\n          emailData: emailData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(GenerateEmailContent, \"fvvwOqtWM2AcnqTrE2ZXobpjEEY=\");\n_c = GenerateEmailContent;\nvar _c;\n$RefreshReg$(_c, \"GenerateEmailContent\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","InputForm","EmailTemplate","generateEmail","Spinner","jsxDEV","_jsxDEV","GenerateEmailContent","emailData","setEmailData","isLoading","setIsLoading","handleFormSubmit","data","handleGenerateEmail","emailContent","error","console","className","children","fileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/home/dharmil/Documents/AI_EMAIL_Template/FE/src/component/pages/generate-email-content.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport InputForm from \"../ui/InputForm\"\nimport EmailTemplate from \"../ui/EmailTemplate\"\nimport { generateEmail } from \"../../apis/generateEmail\"\nimport Spinner from \"../ui/spinner\"\n\nexport default function GenerateEmailContent() {\n  const [emailData, setEmailData] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleFormSubmit = (data) => {\n    setEmailData(data)\n    handleGenerateEmail(data) // Pass data directly to generate email\n  }\n\n  const handleGenerateEmail = async (data) => {\n    setIsLoading(true);\n    try {\n      const emailContent = await generateEmail(data); // Use the passed data\n      setEmailData(emailContent);\n    } catch (error) {\n      console.error(\"Error generating email:\", error);\n      // Optionally, you can set an error state here to display a message to the user\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <main className=\"min-h-screen bg-gray-100 py-8 mt-12\">\n      <div className=\"container mx-auto px-4\">\n        <h1 className=\"text-3xl font-bold text-center mb-8\">Deep Blue Health Email Template Generator</h1>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {isLoading ? <Spinner /> : <InputForm onSubmit={handleFormSubmit} />}\n          {isLoading ? <Spinner /> : <EmailTemplate emailData={emailData} />}\n        </div>  \n      </div>\n    </main>\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,OAAO,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAT,EAAA;EAC7C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,YAAY,CAACI,IAAI,CAAC;IAClBC,mBAAmB,CAACD,IAAI,CAAC,EAAC;EAC5B,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAOD,IAAI,IAAK;IAC1CF,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMI,YAAY,GAAG,MAAMZ,aAAa,CAACU,IAAI,CAAC,CAAC,CAAC;MAChDJ,YAAY,CAACM,YAAY,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,SAAS;MACRL,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAMY,SAAS,EAAC,qCAAqC;IAAAC,QAAA,eACnDb,OAAA;MAAKY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCb,OAAA;QAAIY,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAyC;QAAAC,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClGhB,OAAA;QAAKY,SAAS,EAAC,uCAAuC;QAAAC,QAAA,GACnDT,SAAS,gBAAGJ,OAAA,CAACF,OAAO;UAAAgB,QAAA,EAAAvB,YAAA;UAAAwB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACL,SAAS;UAACsB,QAAQ,EAAEX;QAAiB;UAAAQ,QAAA,EAAAvB,YAAA;UAAAwB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACnEZ,SAAS,gBAAGJ,OAAA,CAACF,OAAO;UAAAgB,QAAA,EAAAvB,YAAA;UAAAwB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACJ,aAAa;UAACM,SAAS,EAAEA;QAAU;UAAAY,QAAA,EAAAvB,YAAA;UAAAwB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAF,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA;MAAAF,QAAA,EAAAvB,YAAA;MAAAwB,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAF,QAAA,EAAAvB,YAAA;IAAAwB,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACxB,EAAA,CAjCuBS,oBAAoB;AAAAiB,EAAA,GAApBjB,oBAAoB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}